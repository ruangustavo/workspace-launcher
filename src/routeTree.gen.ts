/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspacesAddRouteImport } from './routes/workspaces.add'
import { Route as WorkspacesIdEditRouteImport } from './routes/workspaces.$id.edit'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspacesAddRoute = WorkspacesAddRouteImport.update({
  id: '/workspaces/add',
  path: '/workspaces/add',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspacesIdEditRoute = WorkspacesIdEditRouteImport.update({
  id: '/workspaces/$id/edit',
  path: '/workspaces/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/workspaces/add': typeof WorkspacesAddRoute
  '/workspaces/$id/edit': typeof WorkspacesIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/workspaces/add': typeof WorkspacesAddRoute
  '/workspaces/$id/edit': typeof WorkspacesIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/settings': typeof SettingsRoute
  '/workspaces/add': typeof WorkspacesAddRoute
  '/workspaces/$id/edit': typeof WorkspacesIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/settings'
    | '/workspaces/add'
    | '/workspaces/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/settings' | '/workspaces/add' | '/workspaces/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/settings'
    | '/workspaces/add'
    | '/workspaces/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  SettingsRoute: typeof SettingsRoute
  WorkspacesAddRoute: typeof WorkspacesAddRoute
  WorkspacesIdEditRoute: typeof WorkspacesIdEditRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspaces/add': {
      id: '/workspaces/add'
      path: '/workspaces/add'
      fullPath: '/workspaces/add'
      preLoaderRoute: typeof WorkspacesAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspaces/$id/edit': {
      id: '/workspaces/$id/edit'
      path: '/workspaces/$id/edit'
      fullPath: '/workspaces/$id/edit'
      preLoaderRoute: typeof WorkspacesIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  SettingsRoute: SettingsRoute,
  WorkspacesAddRoute: WorkspacesAddRoute,
  WorkspacesIdEditRoute: WorkspacesIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
